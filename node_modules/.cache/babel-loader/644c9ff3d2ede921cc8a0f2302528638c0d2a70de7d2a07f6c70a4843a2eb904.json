{"ast":null,"code":"import axios from 'axios';\nclass MyClass {\n  constructor() {\n    this.start = async () => {\n      // Login and get the initial tokens\n      await this.login();\n      while (this.currentPos < this.text.length) {\n        const endPos = this.calculateEndPos();\n        const sentence = this.text.substring(this.currentPos, endPos);\n        this.currentPos = endPos;\n\n        // send sentence to the server\n        const result = await this.sendTextToServer(sentence);\n\n        // check if the onresult function exists and call it\n        if (typeof this.onresult === 'function') {\n          this.onresult(result);\n        }\n      }\n    };\n    this.login = async () => {\n      const response = await axios.post('https://enagramm.com/API/Account/Login', {\n        Email: 'levan.lashauri1@gmail.com',\n        Password: 'Demo_1234'\n      });\n      this.token = response.data.AccessToken;\n      this.refreshToken = response.data.RefreshToken;\n    };\n    this.refreshTokens = async () => {\n      const response = await axios.post('https://enagramm.com/API/Account/RefreshToken', {\n        AccessToken: this.token,\n        RefreshToken: this.refreshToken\n      });\n      this.token = response.data.AccessToken;\n      this.refreshToken = response.data.RefreshToken;\n    };\n    this.calculateEndPos = () => {\n      const endPosLimit = Math.min(this.currentPos + 230, this.text.length);\n      for (let i = this.currentPos + 150; i <= endPosLimit; i++) {\n        if (['.', '!', '?', ';', ','].includes(this.text[i])) {\n          return i + 1;\n        }\n      }\n      return endPosLimit;\n    };\n    this.sendTextToServer = async sentence => {\n      const model = {\n        Language: 'ka',\n        Text: sentence,\n        Voice: 0,\n        iterationCount: 2\n      };\n      try {\n        const response = await axios({\n          method: 'post',\n          url: 'https://enagramm.com/API/TTS/SynthesizeTextAudioPath',\n          data: JSON.stringify(model),\n          headers: {\n            Authorization: `Bearer ${this.token}`,\n            'Content-Type': 'application/json; charset=utf-8'\n          }\n        });\n        console.log('responsedata', response.data.AudioFilePath);\n        return response.data;\n      } catch (error) {\n        if (error.response && error.response.status === 401) {\n          // Refresh tokens and retry\n          await this.refreshTokens();\n          return this.sendTextToServer(sentence);\n        } else {\n          throw error;\n        }\n      }\n    };\n    this.text = '';\n    this.onresult = null;\n    this.currentPos = 0;\n    this.token = '';\n    this.refreshToken = '';\n  }\n}\nexport default MyClass;","map":{"version":3,"names":["axios","MyClass","constructor","start","login","currentPos","text","length","endPos","calculateEndPos","sentence","substring","result","sendTextToServer","onresult","response","post","Email","Password","token","data","AccessToken","refreshToken","RefreshToken","refreshTokens","endPosLimit","Math","min","i","includes","model","Language","Text","Voice","iterationCount","method","url","JSON","stringify","headers","Authorization","console","log","AudioFilePath","error","status"],"sources":["/Users/davitBakhutashvili/MyProjects/Markup/markup-app/src/helpers/myClass.js"],"sourcesContent":["import axios from 'axios';\n\nclass MyClass {\n  constructor() {\n    this.text = '';\n    this.onresult = null;\n    this.currentPos = 0;\n    this.token = '';\n    this.refreshToken = '';\n  }\n\n  start = async () => {\n    // Login and get the initial tokens\n    await this.login();\n\n    while (this.currentPos < this.text.length) {\n      const endPos = this.calculateEndPos();\n      const sentence = this.text.substring(this.currentPos, endPos);\n      this.currentPos = endPos;\n\n      // send sentence to the server\n      const result = await this.sendTextToServer(sentence);\n\n      // check if the onresult function exists and call it\n      if (typeof this.onresult === 'function') {\n        this.onresult(result);\n      }\n    }\n  };\n\n  login = async () => {\n    const response = await axios.post(\n      'https://enagramm.com/API/Account/Login',\n      {\n        Email: 'levan.lashauri1@gmail.com',\n        Password: 'Demo_1234',\n      }\n    );\n\n    this.token = response.data.AccessToken;\n\n    this.refreshToken = response.data.RefreshToken;\n  };\n\n  refreshTokens = async () => {\n    const response = await axios.post(\n      'https://enagramm.com/API/Account/RefreshToken',\n      {\n        AccessToken: this.token,\n        RefreshToken: this.refreshToken,\n      }\n    );\n\n    this.token = response.data.AccessToken;\n    this.refreshToken = response.data.RefreshToken;\n  };\n\n  calculateEndPos = () => {\n    const endPosLimit = Math.min(this.currentPos + 230, this.text.length);\n    for (let i = this.currentPos + 150; i <= endPosLimit; i++) {\n      if (['.', '!', '?', ';', ','].includes(this.text[i])) {\n        return i + 1;\n      }\n    }\n    return endPosLimit;\n  };\n\n  sendTextToServer = async (sentence) => {\n    const model = {\n      Language: 'ka',\n      Text: sentence,\n      Voice: 0,\n      iterationCount: 2,\n    };\n\n    try {\n      const response = await axios({\n        method: 'post',\n        url: 'https://enagramm.com/API/TTS/SynthesizeTextAudioPath',\n        data: JSON.stringify(model),\n        headers: {\n          Authorization: `Bearer ${this.token}`,\n          'Content-Type': 'application/json; charset=utf-8',\n        },\n      });\n      console.log('responsedata', response.data.AudioFilePath);\n      return response.data;\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        // Refresh tokens and retry\n        await this.refreshTokens();\n        return this.sendTextToServer(sentence);\n      } else {\n        throw error;\n      }\n    }\n  };\n}\n\nexport default MyClass;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}