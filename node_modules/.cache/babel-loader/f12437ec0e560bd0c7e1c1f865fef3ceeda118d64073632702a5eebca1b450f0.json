{"ast":null,"code":"import axios from 'axios';\nexport const login = async function () {\n  const response = await axios.post('https://enagramm.com/API/Account/Login', {\n    Email: 'levan.lashauri1@gmail.com',\n    Password: 'Demo_1234'\n  });\n  this.token = response.data.AccessToken;\n  this.refreshToken = response.data.RefreshToken;\n};\nexport const refreshTokens = async function () {\n  const response = await axios.post('https://enagramm.com/API/Account/RefreshToken', {\n    AccessToken: this.token,\n    RefreshToken: this.refreshToken\n  });\n  this.token = response.data.AccessToken;\n  this.refreshToken = response.data.RefreshToken;\n};\nexport const sendTextToServer = async function (sentence, token) {\n  const model = {\n    Language: 'ka',\n    Text: sentence,\n    Voice: 0,\n    iterationCount: 2\n  };\n  try {\n    const response = await axios({\n      method: 'post',\n      url: 'https://enagramm.com/API/TTS/SynthesizeTextAudioPath',\n      data: JSON.stringify(model),\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json; charset=utf-8'\n      }\n    });\n    console.log('responsedata', response.data.AudioFilePath);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      // Refresh tokens and retry\n      await refreshTokens.call(this);\n      return sendTextToServer.call(this, sentence, this.token);\n    } else {\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","login","response","post","Email","Password","token","data","AccessToken","refreshToken","RefreshToken","refreshTokens","sendTextToServer","sentence","model","Language","Text","Voice","iterationCount","method","url","JSON","stringify","headers","Authorization","console","log","AudioFilePath","error","status","call"],"sources":["/Users/davitBakhutashvili/MyProjects/Markup/markup-app/src/services/useApiServices.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const login = async function () {\n  const response = await axios.post('https://enagramm.com/API/Account/Login', {\n    Email: 'levan.lashauri1@gmail.com',\n    Password: 'Demo_1234',\n  });\n\n  this.token = response.data.AccessToken;\n  this.refreshToken = response.data.RefreshToken;\n};\n\nexport const refreshTokens = async function () {\n  const response = await axios.post(\n    'https://enagramm.com/API/Account/RefreshToken',\n    {\n      AccessToken: this.token,\n      RefreshToken: this.refreshToken,\n    }\n  );\n\n  this.token = response.data.AccessToken;\n  this.refreshToken = response.data.RefreshToken;\n};\n\nexport const sendTextToServer = async function (sentence, token) {\n  const model = {\n    Language: 'ka',\n    Text: sentence,\n    Voice: 0,\n    iterationCount: 2,\n  };\n\n  try {\n    const response = await axios({\n      method: 'post',\n      url: 'https://enagramm.com/API/TTS/SynthesizeTextAudioPath',\n      data: JSON.stringify(model),\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json; charset=utf-8',\n      },\n    });\n    console.log('responsedata', response.data.AudioFilePath);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      // Refresh tokens and retry\n      await refreshTokens.call(this);\n      return sendTextToServer.call(this, sentence, this.token);\n    } else {\n      throw error;\n    }\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,KAAK,GAAG,eAAAA,CAAA,EAAkB;EACrC,MAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,IAAI,CAAC,wCAAwC,EAAE;IAC1EC,KAAK,EAAE,2BAA2B;IAClCC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,IAAI,CAACC,KAAK,GAAGJ,QAAQ,CAACK,IAAI,CAACC,WAAW;EACtC,IAAI,CAACC,YAAY,GAAGP,QAAQ,CAACK,IAAI,CAACG,YAAY;AAChD,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,eAAAA,CAAA,EAAkB;EAC7C,MAAMT,QAAQ,GAAG,MAAMF,KAAK,CAACG,IAAI,CAC/B,+CAA+C,EAC/C;IACEK,WAAW,EAAE,IAAI,CAACF,KAAK;IACvBI,YAAY,EAAE,IAAI,CAACD;EACrB,CACF,CAAC;EAED,IAAI,CAACH,KAAK,GAAGJ,QAAQ,CAACK,IAAI,CAACC,WAAW;EACtC,IAAI,CAACC,YAAY,GAAGP,QAAQ,CAACK,IAAI,CAACG,YAAY;AAChD,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,eAAAA,CAAgBC,QAAQ,EAAEP,KAAK,EAAE;EAC/D,MAAMQ,KAAK,GAAG;IACZC,QAAQ,EAAE,IAAI;IACdC,IAAI,EAAEH,QAAQ;IACdI,KAAK,EAAE,CAAC;IACRC,cAAc,EAAE;EAClB,CAAC;EAED,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMF,KAAK,CAAC;MAC3BmB,MAAM,EAAE,MAAM;MACdC,GAAG,EAAE,sDAAsD;MAC3Db,IAAI,EAAEc,IAAI,CAACC,SAAS,CAACR,KAAK,CAAC;MAC3BS,OAAO,EAAE;QACPC,aAAa,EAAG,UAASlB,KAAM,EAAC;QAChC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACFmB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAExB,QAAQ,CAACK,IAAI,CAACoB,aAAa,CAAC;IACxD,OAAOzB,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOqB,KAAK,EAAE;IACd,IAAIA,KAAK,CAAC1B,QAAQ,IAAI0B,KAAK,CAAC1B,QAAQ,CAAC2B,MAAM,KAAK,GAAG,EAAE;MACnD;MACA,MAAMlB,aAAa,CAACmB,IAAI,CAAC,IAAI,CAAC;MAC9B,OAAOlB,gBAAgB,CAACkB,IAAI,CAAC,IAAI,EAAEjB,QAAQ,EAAE,IAAI,CAACP,KAAK,CAAC;IAC1D,CAAC,MAAM;MACL,MAAMsB,KAAK;IACb;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}