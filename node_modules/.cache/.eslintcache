[{"/Users/davitBakhutashvili/MyProjects/Markup/markup-app/src/index.js":"1","/Users/davitBakhutashvili/MyProjects/Markup/markup-app/src/Admin.js":"2","/Users/davitBakhutashvili/MyProjects/Markup/markup-app/src/components/Header/Header.js":"3","/Users/davitBakhutashvili/MyProjects/Markup/markup-app/src/components/Menu/Menu.js":"4","/Users/davitBakhutashvili/MyProjects/Markup/markup-app/src/components/Content/Content.js":"5","/Users/davitBakhutashvili/MyProjects/Markup/markup-app/src/helpers/myClass.js":"6","/Users/davitBakhutashvili/MyProjects/Markup/markup-app/src/services/useApiServices.jsx":"7"},{"size":260,"mtime":1687160041347,"results":"8","hashOfConfig":"9"},{"size":653,"mtime":1687160041312,"results":"10","hashOfConfig":"9"},{"size":2903,"mtime":1687160041341,"results":"11","hashOfConfig":"9"},{"size":4875,"mtime":1687160041342,"results":"12","hashOfConfig":"9"},{"size":12205,"mtime":1687160041340,"results":"13","hashOfConfig":"9"},{"size":1165,"mtime":1687160041344,"results":"14","hashOfConfig":"9"},{"size":1460,"mtime":1687160041349,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jho1a4",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/davitBakhutashvili/MyProjects/Markup/markup-app/src/index.js",[],[],"/Users/davitBakhutashvili/MyProjects/Markup/markup-app/src/Admin.js",[],[],"/Users/davitBakhutashvili/MyProjects/Markup/markup-app/src/components/Header/Header.js",[],[],"/Users/davitBakhutashvili/MyProjects/Markup/markup-app/src/components/Menu/Menu.js",[],[],"/Users/davitBakhutashvili/MyProjects/Markup/markup-app/src/components/Content/Content.js",["39"],[],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Done from '../../assets/done.png';\nimport Delete from '../../assets/delete.png';\nimport Copy from '../../assets/copy.png';\nimport Georgia from '../../assets/georgia.png';\nimport British from '../../assets/britain.png';\nimport Spain from '../../assets/spain.png';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport MyClass from '../../helpers/myClass';\n\nconst Content = () => {\n  const languages = [\n    { code: 'ge', label: 'Georgian', flag: Georgia },\n    { code: 'es', label: 'Spanish', flag: Spain },\n    { code: 'en', label: 'English', flag: British },\n  ];\n\n  const [selectedLanguage, setSelectedLanguage] = useState(languages[0]);\n  const [inputValue, setInputValue] = useState('');\n  const [editorContent, setEditorContent] = useState('');\n  const [isChecking, setIsChecking] = useState(false);\n\n  const handleCheckButtonClick = () => {\n    setIsChecking(true);\n    cl.start();\n  };\n\n  const handleLanguageChange = (event) => {\n    const selectedLanguageCode = event.target.value;\n    const selectedLanguage = languages.find(\n      (language) => language.code === selectedLanguageCode\n    );\n    setSelectedLanguage(selectedLanguage);\n  };\n\n  const handleInputChange = (event) => {\n    const value = event.target.value;\n    setInputValue(value);\n    setEditorContent(value);\n  };\n\n  const characterCount = inputValue.length;\n  const wordCount = inputValue.trim().split(/\\s+/).length;\n\n  const cl = new MyClass();\n  cl.text =\n    'ეს არის მომხიბლავი ტექნოლოგია,რომელსაც აქვს პოტენციალი,მოახდინოს რევოლუცია კომპიუტერებთან ურთიერთობის გზაზე.ეს არის ძლიერი ინსტრუმენტი,რომელიც შეიძლება გამოყენებულ იქნას სხვადასხვა მიზნებისთვის,როგორიცაა წერა,კვლევა და გასართობი.თუმცა,მნიშვნელოვანია იცოდეთ მისი შეზღუდვები და გამოიყენოთ იგი სიფრთხილით.ChatGPT-ის ერთ-ერთი ყველაზე შთამბეჭდავი რამ არის ადამიანის ხარისხის ტექსტის გენერირების უნარი.მას შეუძლია დაწეროს მოთხრობები, ლექსები და ესეები,რომლებიც არ განსხვავდება ადამიანის მიერ დაწერილისგან.მას ასევე შეუძლია უპასუხოს თქვენს კითხვებს ყოვლისმომცველი და ინფორმატიული გზით,თუნდაც ისინი იყოს ღია,რთული ან უცნაური.თუმცა,მნიშვნელოვანია გვახსოვდეს,რომ ChatGPT არის მანქანათმცოდნეობის მოდელი.იგი გაწვრთნილია ტექსტისა და კოდის მასიურ მონაცემთა ბაზაზე, მაგრამ მას არ აქვს სამყაროს გაგება. ეს ნიშნავს, რომ ზოგჯერ მას შეუძლია შექმნას ტექსტი, რომელიც ფაქტიურად არასწორია ან შეცდომაში შემყვანი.ChatGPT-ის კიდევ ერთი შეზღუდვა ის არის, რომ მისი კონტროლი ზოგჯერ რთულია. Ეს არის შექმნილია იყოს ინფორმაციული და ყოვლისმომცველი, ამიტომ ის ხშირად იშლება ტანგენტებზე ან მოგცემთ იმაზე მეტ ინფორმაციას, ვიდრე თქვენ მოითხოვეთ.საერთო ჯამში, მე ძალიან აღფრთოვანებული ვარ OpenAI-ს ChatGPT-ით. ეს არის ძლიერი ინსტრუმენტი,რომელსაც აქვს პოტენციალი გამოიყენოს სხვადასხვა მიზნებისთვის. თუმცა, მნიშვნელოვანია იცოდეთ მისი შეზღუდვები და გამოიყენოთ იგი სიფრთხილით.';\n  cl.onresult = function (result) {\n    var MyResult = result.sourceUrl;\n    setIsChecking(false);\n  };\n\n  return (\n    <ContentWrapper>\n      <StyledButtonContainer>\n        {!isChecking && (\n          <CheckButton onClick={handleCheckButtonClick}>\n            <img src={Done} alt=\"doneIcon\" />\n            <StyledCheckButtonText>Check</StyledCheckButtonText>\n          </CheckButton>\n        )}\n        <CopyButton>\n          <img src={Copy} alt=\"copyIcon\" />\n          <StyledCopyButtonText>Copy</StyledCopyButtonText>\n        </CopyButton>\n        <DeleteButton>\n          <img src={Delete} alt=\"deleteIcon\" />\n          <StyledDeleteButtonText>Delete</StyledDeleteButtonText>\n        </DeleteButton>\n        <StyledLine></StyledLine>\n        <DropdownWrapper>\n          <FlagImage src={selectedLanguage.flag} alt={selectedLanguage.label} />\n          <Dropdown\n            value={selectedLanguage.code}\n            onChange={handleLanguageChange}\n          >\n            {languages.map((language) => (\n              <Option key={language.code} value={language.code}>\n                {language.label}\n              </Option>\n            ))}\n          </Dropdown>\n        </DropdownWrapper>\n      </StyledButtonContainer>\n      <TextAreaContainer>\n        <TextArea\n          value={inputValue}\n          onChange={handleInputChange}\n          placeholder=\"| Type or paste (⌘+V) something here.\"\n        />\n      </TextAreaContainer>\n      <StyledContainer>\n        <ReactQuillWrapper\n          value={editorContent}\n          onChange={setEditorContent}\n          placeholder=\"Enter your text\"\n        />\n\n        <StyledCountWrapper>\n          <CountText>\n            {characterCount} characters, {wordCount} words\n          </CountText>\n        </StyledCountWrapper>\n      </StyledContainer>\n    </ContentWrapper>\n  );\n};\n\nexport default Content;\n\nconst ContentWrapper = styled.main`\n  flex-grow: 1;\n  max-width: 1520px; /* Adjust the value as needed */\n  margin: 0 auto; /* Center the content horizontally */\n`;\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap; /* Allow buttons to wrap to the next line */\n  justify-content: center;\n  align-items: center;\n  height: 120px;\n  border-bottom: 1px solid #ededed;\n`;\n\nconst CheckButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 4px 20px 4px 14px;\n  gap: 4px;\n  position: absolute;\n  width: 106px;\n  height: 36px;\n  border: none;\n  left: 295px;\n  top: 145px;\n  cursor: pointer;\n  background: #2d62ed;\n  border-radius: 6px;\n  @media (max-width: 768px) {\n    width: 100%; /* Take up full width on smaller screens */\n    margin-top: 10px; /* Add some space between buttons */\n  }\n`;\n\nconst CopyButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 4px 14px;\n  gap: 8px;\n  position: absolute;\n  width: 90px;\n  height: 36px;\n  right: 500px;\n  cursor: pointer;\n  border: none;\n  top: 145px;\n  background: #ededed;\n  border-radius: 4px;\n  @media (max-width: 768px) {\n    width: 100%; /* Take up full width on smaller screens */\n    margin-top: 10px; /* Add some space between buttons */\n  }\n`;\n\nconst DeleteButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 4px 14px;\n  gap: 8px;\n  position: absolute;\n  width: 97px;\n  height: 36px;\n  cursor: pointer;\n  right: 380px;\n  border: none;\n  top: 145px;\n  background: #f8f8f8;\n  border-radius: 4px;\n  @media (max-width: 768px) {\n    width: 100%; /* Take up full width on smaller screens */\n    margin-top: 10px; /* Add some space between buttons */\n  }\n`;\n\nconst StyledLine = styled.div`\n  position: absolute;\n  width: 1px;\n  height: 24px;\n  left: calc(50% - 1px / 2 + 603.5px);\n  top: calc(50% - 24px / 2 - 385px);\n  border: 1px solid #cccaca;\n  @media (max-width: 768px) {\n    display: none; /* Hide the line on smaller screens */\n  }\n`;\n\nconst DropdownWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 14px;\n  gap: 10px;\n  position: absolute;\n  width: 144px;\n  height: 36px;\n  top: 130px;\n  float: right;\n  right: 170px;\n  background: #f8f8f8;\n  border-radius: 4px;\n  @media (max-width: 768px) {\n    width: 100%; /* Take up full width on smaller screens */\n    margin-top: 10px; /* Add some space between buttons */\n    justify-content: flex-end; /* Align the dropdown to the right */\n  }\n`;\n\nconst StyledCheckButtonText = styled.span`\n  width: 44px;\n  height: 28px;\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 28px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: #ffffff;\n  flex: none;\n  order: 1;\n  flex-grow: 0;\n`;\n\nconst StyledCopyButtonText = styled.span`\n  width: 30px;\n  height: 28px;\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 28px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: #2d62ed;\n  flex: none;\n  order: 1;\n  flex-grow: 0;\n`;\n\nconst StyledDeleteButtonText = styled.span`\n  width: 37px;\n  height: 28px;\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 28px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: #606060;\n  flex: none;\n  order: 1;\n  flex-grow: 0;\n`;\n\nconst FlagImage = styled.img`\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n`;\n\nconst Dropdown = styled.select`\n  padding: 8px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background-color: transparent;\n`;\n\nconst Option = styled.option``;\n\nconst TextAreaContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 90%;\n  float: left;\n  @media (max-width: 768px) {\n    margin-left: 0; /* Remove the left margin on smaller screens */\n  }\n`;\n\nconst TextArea = styled.textarea`\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  margin-top: auto;\n  border: none;\n  background: transparent;\n  width: 100%;\n  height: 700px;\n`;\n\nconst StyledContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin-left: 50px;\n  width: 90%;\n  flex-shrink: 0;\n  gap: 50px;\n  @media (max-width: 768px) {\n    flex-direction: column; /* Stack the elements vertically on smaller screens */\n    align-items: flex-start; /* Align elements to the left */\n    margin-left: 0; /* Remove the left margin on smaller screens */\n    margin-top: 30px; /* Adjust the spacing */\n  }\n`;\n\nconst ReactQuillWrapper = styled(ReactQuill)`\n  margin-top: 30px;\n  //   flex-shrink: 0;\n`;\n\nconst StyledCountWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 20px;\n  gap: 10px;\n  width: fit-content;\n  height: 30px;\n  margin-left: 400px;\n  background: #ffffff;\n`;\n\nconst CountText = styled.span`\n  width: 152px;\n  height: 20px;\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 20px;\n  text-align: center;\n  color: #000000;\n  flex: none;\n  order: 0;\n  flex-grow: 0;\n`;\n","/Users/davitBakhutashvili/MyProjects/Markup/markup-app/src/helpers/myClass.js",["40","41"],[],"import axios from 'axios';\nimport {\n  login,\n  refreshTokens,\n  sendTextToServer,\n} from '../services/useApiServices';\n\nclass MyClass {\n  constructor() {\n    this.text = '';\n    this.onresult = null;\n    this.currentPos = 0;\n    this.token = '';\n    this.refreshToken = '';\n  }\n\n  start = async () => {\n    // Login and get the initial tokens\n    await login.call(this);\n\n    while (this.currentPos < this.text.length) {\n      const endPos = this.calculateEndPos();\n      const sentence = this.text.substring(this.currentPos, endPos);\n      this.currentPos = endPos;\n\n      // send sentence to the server\n      const result = await sendTextToServer.call(this, sentence, this.token);\n\n      // check if the onresult function exists and call it\n      if (typeof this.onresult === 'function') {\n        this.onresult(result);\n      }\n    }\n  };\n\n  calculateEndPos = () => {\n    const endPosLimit = Math.min(this.currentPos + 230, this.text.length);\n    for (let i = this.currentPos + 150; i <= endPosLimit; i++) {\n      if (['.', '!', '?', ';', ','].includes(this.text[i])) {\n        return i + 1;\n      }\n    }\n    return endPosLimit;\n  };\n}\n\nexport default MyClass;\n","/Users/davitBakhutashvili/MyProjects/Markup/markup-app/src/services/useApiServices.jsx",[],[],{"ruleId":"42","severity":1,"message":"43","line":51,"column":9,"nodeType":"44","messageId":"45","endLine":51,"endColumn":17},{"ruleId":"42","severity":1,"message":"46","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":13},{"ruleId":"42","severity":1,"message":"47","line":4,"column":3,"nodeType":"44","messageId":"45","endLine":4,"endColumn":16},"no-unused-vars","'MyResult' is assigned a value but never used.","Identifier","unusedVar","'axios' is defined but never used.","'refreshTokens' is defined but never used."]